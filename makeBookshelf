#!/bin/bash
#
#    Copyright 2016 Google, Inc.
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.set -x -e

# command: run | deploy

# [START config] 
# typically projectID.appspot.com
HOST=

# datastore | cloudsql -- Only use datastore for now.
STORAGETYPE=datastore
BUCKET=

# from: https://cloud.google.com/console  API Manager > Credentials > Create Credentials
CLIENTID=
CLIENTSECRET=
# [END config]

# Not used for now
SQLHOST=
SQLDBNAME=
SQLUSER=
SQLPW=

WAR=bookshelf-1.0-SNAPSHOT.war

function print_usage() {
  echo "Usage: ${0} run | deploy | gce"
  echo ""
  echo "This command is useful as a place to let you easily move back and forth between running or"
  echo "deploying the bookshelf app.  You may add all your configuration here, so you don't need"
  echo "to change them in every version of this application."
  echo ""
  echo "run    - mvn jetty:run-exploded - runs locally with all the variables set"
  echo "deploy - mvn jetty:deploy - deploy's to App Engine Flexible with all values set"
  echo "gce    - mvn package; gsutil cp; gcloud compute instances create ...; - deploys to Compute Engine"
}

if [ $# = 0 ]; then
  print_usage
  exit
fi

COMMAND=$1

case $COMMAND in
  # usage flags
  --help|-help|-h)
    print_usage
    exit
    ;;

run)
  mvn clean jetty:run-exploded \
    -Dbookshelf.storageType=${STORAGETYPE} \
    -Dbookshelf.bucket=${BUCKET} \
    -Dbookshelf.clientID=${CLIENTID} \
    -Dbookshelf.clientSecret=${CLIENTSECRET} \
    -Dcallback.method=http \
    -Dcallback.host=localhost:8080 \
    -Dsql.host=${SQLHOST} \
    -Dsql.dbName=${SQLDBNAME} \
    -Dsql.userName=${SQLUSER} \
    -Dsql.password=${SQLPW}
  ;;

deploy)
  mvn clean gcloud:deploy \
    -Dbookshelf.storageType=${STORAGETYPE} \
    -Dbookshelf.bucket=${BUCKET} \
    -Dbookshelf.clientID=${CLIENTID} \
    -Dbookshelf.clientSecret=${CLIENTSECRET} \
    -Dcallback.method=https \
    -Dcallback.host=${HOST} \
    -Dsql.host=${SQLHOST} \
    -Dsql.dbName=${SQLDBNAME} \
    -Dsql.userName=${SQLUSER} \
    -Dsql.password=${SQLPW}
  ;;

gce)
  mvn clean package \
    -Dbookshelf.storageType=${STORAGETYPE} \
    -Dbookshelf.bucket=${BUCKET} \
    -Dbookshelf.clientID=${CLIENTID} \
    -Dbookshelf.clientSecret=${CLIENTSECRET} \
    -Dcallback.method=http \
    -Dcallback.host=localhost:8080 \
    -Dsql.host=${SQLHOST} \
    -Dsql.dbName=${SQLDBNAME} \
    -Dsql.userName=${SQLUSER} \
    -Dsql.password=${SQLPW}

  gsutil cp -r target/${WAR} gce/* gs://${BUCKET}/gce/

  gcloud compute instances create my-app-instance \
    --machine-type=g1-small \
    --scopes https://www.googleapis.com/auth/cloud-platform,datastore,userinfo-email,logging-write,storage-full \
    --metadata-from-file startup-script=gce/startup-script.sh \
    --zone us-central1-f \
    --tags http-server \
    --image debian-8 \
    --metadata BUCKET=${BUCKET},HOST=${HOST},WAR=${WAR}
  ;;

esac
